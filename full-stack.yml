---
# Cannot get this to work for some reason
#AWSTemplateFormatVersion: AWSTemplateFormatVersion: '2010-09-09'

Description: This template creates a new VPC and places EC2 Container Services (ECS) into it.

Metadata:
    Foo:
        Description: 'something clever'
    Bar:
        Description: 'something clever'

# These show up in the console and are expected to be provided by the operator
Parameters:
    Project:
        Description: 'Project name this cluster is has been created for'
        Type: 'String'
        Default: 'Weapon X'

    Creator:
        Description: 'Tool or person creating this cluster'
        Type: 'String'
        Default: 'CloudFormation'

    Environment:
        Description: 'Context the cluster will be used in.  Common values are production, testing and development.'
        Type: 'String'
        Default: 'development'

    Notes:
        Description: 'Notes to apply, normally edited in the console.'
        Type: 'String'
        Default: 'No notes'

    SshKeyName:
        Description: 'Name of the key to use when creating the EC2 instances'
        Type: 'String'
        Default: 'asgard-lite-test'

    Network:
        Description: 'The ip range to use when building out the VPC network'
        Type: 'String'
        Default: '10.0.0.0'

    InstanceType:
        Description: 'How large of a box to run your containers on'
        Type: 'String'
        Default: 'm4.large'

    SpotPrice:
        Description: 'Maximum bid price to place on your EC2 instances'
        Type: 'String'
        Default: '0.10'

    LoadBalancerPort:
        Description: The port the load balancer should listen on
        Type: Number
        Default: 80

    SearchDomainName:
        Description: 'A name for the Amazon ES domain. Valid characters are a-z (lowercase only), 0-9, and â€“ (hyphen).'
        Type: 'String'

    MongoDBInstanceType:
        Description: 'EC2 instance type to use when assembling the MongoDB cluster'
        Type: 'String'
        Default: 't2.small'

    MongoDBVolumeSize:
        Description: 'The size of the MongoDB data volume, in gibibytes (GiBs).'
        Type: 'Number'
        Default: '16'

    MySQLStorageSize:
        Description: 'The allocated storage size, specified in gigabytes (GB).'
        Type: 'String'
        Default: '16'

    VpcURL:
        Description: 'Location of the VPC template file'
        Type: 'String'
        Default: 'https://s3.amazonaws.com/jvmguy-cloudformation-templates/vpc.yml'

    EcsURL:
        Description: 'Location of the ECS template file'
        Type: 'String'
        Default: 'https://s3.amazonaws.com/jvmguy-cloudformation-templates/ecs.yml'

    ElbURL:
        Description: 'Location of the ELB template file'
        Type: 'String'
        Default: 'https://s3.amazonaws.com/jvmguy-cloudformation-templates/elb.yml'

    ServiceURL:
        Description: 'Location of the ECS Service template file'
        Type: 'String'
        Default: 'https://s3.amazonaws.com/jvmguy-cloudformation-templates/service.yml'

    CdnURL:
        Description: 'Location of the CDN template file'
        Type: 'String'
        Default: 'https://s3.amazonaws.com/jvmguy-cloudformation-templates/cdn.yml'

    WafURL:
        Description: 'Location of the WAF template file'
        Type: 'String'
        Default: 'https://s3.amazonaws.com/jvmguy-cloudformation-templates/waf.yml'

    CacheURL:
        Description: 'Location of the ElastiCache template file'
        Type: 'String'
        Default: 'https://s3.amazonaws.com/jvmguy-cloudformation-templates/elasticache.yml'

    SearchURL:
        Description: 'Location of the ElasticSearch template file'
        Type: 'String'
        Default: 'https://s3.amazonaws.com/jvmguy-cloudformation-templates/elasticsearch.yml'

    MongoDBURL:
        Description: 'Location of the MongoDB template file'
        Type: 'String'
        Default: 'https://s3.amazonaws.com/jvmguy-cloudformation-templates/mongodb.yml'

    RdsURL:
        Description: 'Location of the MySQL RDS template file'
        Type: 'String'
        Default: 'https://s3.amazonaws.com/jvmguy-cloudformation-templates/rds.yml'


Resources:
    VPC:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL:
                Ref: VpcURL
            Parameters:
                Project:
                    Ref: Project
                Creator:
                    Ref: Creator
                Environment:
                    Ref: Environment
                Notes:
                    Ref: Notes
                SshKeyName:
                    Ref: SshKeyName

    MySQL:
        Type: AWS::CloudFormation::Stack
        DependsOn: VPC
        Properties:
            TemplateURL:
                Ref: RdsURL
            Parameters:
                Project:
                    Ref: Project
                Creator:
                    Ref: Creator
                Environment:
                    Ref: Environment
                Notes:
                    Ref: Notes
                VPC:
                    Fn::GetAtt:
                    - VPC
                    - Outputs.VPC
                Subnets:
                    Fn::GetAtt:
                    - VPC
                    - Outputs.PrivateSubnets
                AllocatedStorage:
                    Ref: MySQLStorageSize

    MongoDB:
        Type: AWS::CloudFormation::Stack
        DependsOn: VPC
        Properties:
            TemplateURL:
                Ref: MongoDBURL
            Parameters:
                Project:
                    Ref: Project
                Creator:
                    Ref: Creator
                Environment:
                    Ref: Environment
                Notes:
                    Ref: Notes
                VPC:
                    Fn::GetAtt:
                    - VPC
                    - Outputs.VPC
                SshKeyName:
                    Ref: SshKeyName
                InstanceType:
                    Ref: MongoDBInstanceType
                VolumeSize:
                    Ref: MongoDBVolumeSize
                Subnets:
                    Fn::GetAtt:
                    - VPC
                    - Outputs.PrivateSubnets

    Search:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL:
                Ref: SearchURL
            Parameters:
                DomainName:
                    Ref: SearchDomainName

    Redis:
        Type: AWS::CloudFormation::Stack
        DependsOn: VPC
        Properties:
            TemplateURL:
                Ref: CacheURL
            Parameters:
                VPC:
                    Fn::GetAtt:
                    - VPC
                    - Outputs.VPC
                Subnets:
                    Fn::GetAtt:
                    - VPC
                    - Outputs.PrivateSubnets

    ECS:
        Type: AWS::CloudFormation::Stack
        DependsOn: VPC
        Properties:
            TemplateURL:
                Ref: EcsURL
            Parameters:
                Project:
                    Ref: Project
                Creator:
                    Ref: Creator
                Environment:
                    Ref: Environment
                Notes:
                    Ref: Notes
                SshKeyName:
                    Ref: SshKeyName
                InstanceType:
                    Ref: InstanceType
                SpotPrice:
                    Ref: SpotPrice
                Subnets:
                    Fn::GetAtt:
                    - VPC
                    - Outputs.Subnets
                SecurityGroups:
                    Fn::GetAtt:
                        - VPC
                        - Outputs.SecurityGroupWideOpen

    ExternalLoadBalancer:
        Type: AWS::CloudFormation::Stack
        DependsOn: VPC
        Properties:
            TemplateURL:
                Ref: ElbURL
            Parameters:
                Project:
                    Ref: Project
                Creator:
                    Ref: Creator
                Environment:
                    Ref: Environment
                Notes: 'External Load Balancer'
                Subnets:
                    Fn::GetAtt:
                    - VPC
                    - Outputs.PublicSubnets
                VPC:
                    Fn::GetAtt:
                    - VPC
                    - Outputs.VPC
                SecurityGroups:
                    Fn::GetAtt:
                        - VPC
                        - Outputs.SecurityGroupWideOpen
                LoadBalancerPort:
                    Ref: LoadBalancerPort
                LoadBalancerType: internet-facing

    InternalLoadBalancer:
        Type: AWS::CloudFormation::Stack
        DependsOn: VPC
        Properties:
            TemplateURL:
                Ref: ElbURL
            Parameters:
                Project:
                    Ref: Project
                Creator:
                    Ref: Creator
                Environment:
                    Ref: Environment
                Notes: 'Internal Load Balancer'
                Subnets:
                    Fn::GetAtt:
                    - VPC
                    - Outputs.PrivateSubnets
                VPC:
                    Fn::GetAtt:
                    - VPC
                    - Outputs.VPC
                SecurityGroups:
                    Fn::GetAtt:
                        - VPC
                        - Outputs.SecurityGroupWideOpen
                LoadBalancerPort:
                    Ref: LoadBalancerPort
                LoadBalancerType: internal

    WAF:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL:
                Ref: WafURL
            Parameters:
                Name:
                    Ref: AWS::StackName
                MetricName:
                    Ref: AWS::StackName
                Priority: 1

    CDN:
        Type: AWS::CloudFormation::Stack
        DependsOn:
            - ExternalLoadBalancer
            - WAF
        Properties:
            TemplateURL:
                Ref: CdnURL
            Parameters:
                LoadBalancerDomainName:
                    Fn::GetAtt:
                        - ExternalLoadBalancer
                        - Outputs.LoadBalancerUrl
                LoadBalancerPort:
                    Ref: LoadBalancerPort
                WAF:
                    Fn::GetAtt:
                        - WAF
                        - Outputs.ACL
                Bucket:
                    Fn::GetAtt:
                        - ExternalLoadBalancer
                        - Outputs.LogBucketDomainName

    Alpha:
        Type: AWS::CloudFormation::Stack
        DependsOn: ExternalLoadBalancer
        Properties:
            TemplateURL:
                Ref: ServiceURL
            Parameters:
                Project:
                    Ref: Project
                Creator:
                    Ref: Creator
                Environment:
                    Ref: Environment
                Notes:
                    Ref: Notes
                VPC:
                    Fn::GetAtt:
                    - VPC
                    - Outputs.VPC
                Cluster:
                    Fn::GetAtt:
                    - ECS
                    - Outputs.Cluster
                Listener:
                    Fn::GetAtt:
                    - ExternalLoadBalancer
                    - Outputs.LoadBalancerListener
                ListenerPriority: 1
                Path: '/alpha'
                ContainerName: 'alpha'
                ServiceFamily:
                    Ref: AWS::StackName
                LoadBalancerPort:
                    Ref: LoadBalancerPort
                LogGroup:
                    Fn::GetAtt:
                        - ECS
                        - Outputs.LogGroup

    Bravo:
        Type: AWS::CloudFormation::Stack
        DependsOn: InternalLoadBalancer
        Properties:
            TemplateURL:
                Ref: ServiceURL
            Parameters:
                Project:
                    Ref: Project
                Creator:
                    Ref: Creator
                Environment:
                    Ref: Environment
                Notes:
                    Ref: Notes
                VPC:
                    Fn::GetAtt:
                    - VPC
                    - Outputs.VPC
                Cluster:
                    Fn::GetAtt:
                    - ECS
                    - Outputs.Cluster
                Listener:
                    Fn::GetAtt:
                    - InternalLoadBalancer
                    - Outputs.LoadBalancerListener
                ListenerPriority: 2
                Path: '/bravo'
                ContainerName: 'bravo'
                ServiceFamily:
                    Ref: AWS::StackName
                LoadBalancerPort:
                    Ref: LoadBalancerPort
                LogGroup:
                    Fn::GetAtt:
                        - ECS
                        - Outputs.LogGroup

Outputs:
    CachedDomainName:
        Description: The DNS name referencing the CDN endpoint
        Value: !GetAtt CDN.Outputs.DomainName

    DirectDomainName:
        Description: The DNS name referencing the uncached external ELB endpoint
        Value: !GetAtt ExternalLoadBalancer.Outputs.LoadBalancerUrl

    InternalDomainName:
        Description: The DNS name referencing the internal ELB endpoint
        Value: !GetAtt InternalLoadBalancer.Outputs.LoadBalancerUrl

    InternalLogBucket:
        Description: The name of the S3 bucket where the internal load balancer places its access logs
        Value: !GetAtt InternalLoadBalancer.Outputs.LogBucket

    ExternalLogBucket:
        Description: The name of the S3 bucket where the external load balancer places its access logs
        Value: !GetAtt ExternalLoadBalancer.Outputs.LogBucket

    RedisPrimaryAddress:
        Description: The DNS address of the primary read-write cache node.
        Value: !GetAtt Redis.Outputs.PrimaryAddress

    RedisPrimaryPort:
        Description: The number of the port that the primary read-write cache engine is listening on.
        Value: !GetAtt Redis.Outputs.PrimaryPort

    RedisSecondaryAddresses:
        Description: A string with a list of endpoints for the read-only replicas.
        Value: !GetAtt Redis.Outputs.SecondaryAddresses

    RedisSecondaryPorts:
        Description: A string with a list of ports for the read-only replicas.
        Value: !GetAtt Redis.Outputs.SecondaryPorts

    SearchAddress:
        Description: The domain-specific endpoint that is used to submit index, search, and data upload requests to an Amazon ES domain.
        Value: !GetAtt Search.Outputs.Endpoint

    MySQLAddress:
        Description: The connection endpoint for the database.
        Value: !GetAtt MySQL.Outputs.Address

    MySQLPort:
        Description: The port number on which the database accepts connections.
        Value: !GetAtt MySQL.Outputs.Port

    MySQLUsername:
        Description: The master user name for the DB instance.
        Value: !GetAtt MySQL.Outputs.MasterUsername

    MySQLPassword:
        Description: The password for the master database user.
        Value: !GetAtt MySQL.Outputs.MasterUserPassword
